<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="10" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-16T20:07:16 IST" name="Suite" finished-at="2022-08-16T20:12:05 IST" duration-ms="288776">
    <groups>
    </groups>
    <test started-at="2022-08-16T20:07:16 IST" name="QA" finished-at="2022-08-16T20:12:05 IST" duration-ms="288776">
      <class name="script.InvalidLogin">
        <test-method is-config="true" signature="createReport()[pri:0, instance:script.InvalidLogin@4b741d6d]" started-at="2022-08-16T20:07:15 IST" name="createReport" finished-at="2022-08-16T20:07:16 IST" duration-ms="1056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReport -->
        <test-method is-config="true" signature="openApp(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.InvalidLogin@4b741d6d]" started-at="2022-08-16T20:11:11 IST" name="openApp" finished-at="2022-08-16T20:11:42 IST" duration-ms="30966" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.InvalidLogin.testInvalidLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[config.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testInvalidLogin()[pri:2, instance:script.InvalidLogin@4b741d6d]" started-at="2022-08-16T20:11:42 IST" name="testInvalidLogin" finished-at="2022-08-16T20:11:46 IST" duration-ms="4465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.InvalidLogin@4b741d6d]" started-at="2022-08-16T20:11:46 IST" name="closeApp" finished-at="2022-08-16T20:12:05 IST" duration-ms="18856" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLogin status=SUCCESS method=InvalidLogin.testInvalidLogin()[pri:2, instance:script.InvalidLogin@4b741d6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="publishReport()[pri:0, instance:script.InvalidLogin@4b741d6d]" started-at="2022-08-16T20:12:05 IST" name="publishReport" finished-at="2022-08-16T20:12:11 IST" duration-ms="5489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publishReport -->
      </class> <!-- script.InvalidLogin -->
      <class name="script.TestClass2">
        <test-method is-config="true" signature="openApp(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.TestClass2@17f62e33]" started-at="2022-08-16T20:09:22 IST" name="openApp" finished-at="2022-08-16T20:10:12 IST" duration-ms="50497" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.TestClass2.testLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[config.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testLogin()[pri:0, instance:script.TestClass2@17f62e33]" started-at="2022-08-16T20:10:12 IST" name="testLogin" finished-at="2022-08-16T20:10:12 IST" duration-ms="25" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.fail(Assert.java:115)
at script.TestClass2.testLogin(TestClass2.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.TestClass2@17f62e33]" started-at="2022-08-16T20:10:12 IST" name="closeApp" finished-at="2022-08-16T20:10:16 IST" duration-ms="3594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=FAILURE method=TestClass2.testLogin()[pri:0, instance:script.TestClass2@17f62e33] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.TestClass2 -->
      <class name="script.TestClass1">
        <test-method is-config="true" signature="openApp(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.TestClass1@74ea2410]" started-at="2022-08-16T20:07:17 IST" name="openApp" finished-at="2022-08-16T20:09:16 IST" duration-ms="119261" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.TestClass1.testA()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[config.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testA()[pri:0, instance:script.TestClass1@74ea2410]" started-at="2022-08-16T20:09:16 IST" name="testA" finished-at="2022-08-16T20:09:16 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.TestClass1@74ea2410]" started-at="2022-08-16T20:09:16 IST" name="closeApp" finished-at="2022-08-16T20:09:22 IST" duration-ms="5889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA status=SUCCESS method=TestClass1.testA()[pri:0, instance:script.TestClass1@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.TestClass1 -->
      <class name="script.ValidLogin">
        <test-method is-config="true" signature="openApp(java.lang.reflect.Method,java.lang.String)[pri:0, instance:script.ValidLogin@76b1e9b8]" started-at="2022-08-16T20:10:16 IST" name="openApp" finished-at="2022-08-16T20:10:46 IST" duration-ms="30137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.ValidLogin.testValidLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[config.properties]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method signature="testValidLogin()[pri:1, instance:script.ValidLogin@76b1e9b8]" started-at="2022-08-16T20:10:46 IST" name="testValidLogin" finished-at="2022-08-16T20:11:07 IST" duration-ms="21040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="closeApp(org.testng.ITestResult)[pri:0, instance:script.ValidLogin@76b1e9b8]" started-at="2022-08-16T20:11:07 IST" name="closeApp" finished-at="2022-08-16T20:11:11 IST" duration-ms="3782" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=SUCCESS method=ValidLogin.testValidLogin()[pri:1, instance:script.ValidLogin@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- script.ValidLogin -->
    </test> <!-- QA -->
  </suite> <!-- Suite -->
</testng-results>
